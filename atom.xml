<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[跨交换机不同VLAN间的通信]]></title>
      <url>http://bluebells.tk/2017/03/10/across-switches-diff-vlan/</url>
      <content type="html"><![CDATA[<h2 id="实验原理"><a href="#实验原理" class="headerlink" title="实验原理"></a>实验原理</h2><p>利用三层交换机的路由功能，通过识别数据包的 IP 地址，查找路由表进行转发。三层交换机利用直连路由可以实现不同的 VLAN 间的访问。三层交换机给接口配置 IP 地址采用 SVI（交换虚拟接口）的方式实现 VLAN 间互连。SVI是指为交换机中的VLAN 创建虚拟接口，并且配置IP地址。</p>
<h2 id="实验拓扑"><a href="#实验拓扑" class="headerlink" title="实验拓扑"></a>实验拓扑</h2><p><img src="http://okmotl0nl.bkt.clouddn.com/layer-3-switch-across-diff-vlan1.png" alt=""></p>
<h2 id="实验设备"><a href="#实验设备" class="headerlink" title="实验设备"></a>实验设备</h2><ul>
<li>DCRS 三层交换机、DCS 二层交换机各1台；</li>
<li>PC 机2台，电源线、console 线揽各2条，网线为正线2条，反线1条。</li>
</ul>
<h2 id="实验要求"><a href="#实验要求" class="headerlink" title="实验要求"></a>实验要求</h2><ul>
<li>PC1、PC2 设置IP地址，使用 ping 命令测试他们之间的连通性。</li>
<li>按照拓扑图创建 VLAN，加入端口到 VLAN 中；测试 PC1、PC2 间连通性。</li>
<li>将交换机之间的链路配置为中继链路，将 VLAN100、200 加入许可列表。</li>
</ul>
<h2 id="实验步骤"><a href="#实验步骤" class="headerlink" title="实验步骤"></a>实验步骤</h2><h3 id="物理设备连接"><a href="#物理设备连接" class="headerlink" title="物理设备连接"></a>物理设备连接</h3><p>（1）分别将两交换机配置线的一端与 console 口连接,另一端与 PC1、PC2 的串口相连。<br>（2）网线将PC1与DCRS交换机 f0/1、PC2 与 DCS 交换机 f0/1 相连，剩下一条<strong>反线</strong>连接两台交换机的 f0/24（Trunk）。</p>
<h3 id="测试机配置"><a href="#测试机配置" class="headerlink" title="测试机配置"></a>测试机配置</h3><p>PC1，ip 192.168.10.2 gateway 192.168.10.1<br>PC2，ip 192.168.20.2 gateway 192.168.20.1<br>测试 PC1 ping PC2，结果：ping不通，因为它们在不同的网络段，而不同网络的主机间访问必须通过路由实现。</p>
<h3 id="DCRS-配置"><a href="#DCRS-配置" class="headerlink" title="DCRS 配置"></a>DCRS 配置</h3><p>（1）创建 vlan100, vlan200；<br><img src="http://okmotl0nl.bkt.clouddn.com/layer-3-switch-across-diff-vlan2.png" alt="">（2）对 VLAN100 添加端口组成员1-6；VLAN200 添加端口组成员7-12；<br>（3）对交换机24口打标记，作为汇聚端口<br><img src="http://okmotl0nl.bkt.clouddn.com/layer-3-switch-across-diff-vlan3.png" alt="">（4）添加 VLAN 网关，运行<code>show ip route</code>验证路由配置；<br><img src="http://okmotl0nl.bkt.clouddn.com/layer-3-switch-across-diff-vlan4.png" alt=""></p>
<h3 id="DCS-配置"><a href="#DCS-配置" class="headerlink" title="DCS 配置"></a>DCS 配置</h3><p>创建 VLAN100，添加端口<strong>7-12</strong>；创建 VLAN200，添加端口<strong>1-6</strong>。<br><img src="http://okmotl0nl.bkt.clouddn.com/layer-3-switch-across-diff-vlan6.png" alt=""><br><strong>测试结果</strong>：PC1 与 PC2 可以互相 ping 通。<img src="http://okmotl0nl.bkt.clouddn.com/ping20dot2.png" alt=""><img src="http://okmotl0nl.bkt.clouddn.com/ping10dot2.png" alt=""></p>
<h2 id="相关知识"><a href="#相关知识" class="headerlink" title="相关知识"></a>相关知识</h2><p><strong>三层交换机</strong>，本质上就是带有路由功能的二层交换机。内置的路由模块与交换模块一样，也使用ASIC硬件处理路由。因此，与传统路由器相比，可以实现高速路由。并且，路由与交换模块是汇聚链接的，由于是内部链接，可以确保相当大的带宽。所以VLAN间的通信都使用三层交换机来实现。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[单臂路由实现不同VLAN间通信]]></title>
      <url>http://bluebells.tk/2017/03/10/router-on-a-stick-diff-vlan/</url>
      <content type="html"><![CDATA[<h2 id="实验原理"><a href="#实验原理" class="headerlink" title="实验原理"></a>实验原理</h2><p><strong>单臂路由</strong>（router-on-a-stick）是指在路由器的一个接口上通过配置子接口（或“逻辑接口”，并不存在真正物理接口）的方式，实现原来相互隔离的不同 VLAN（虚拟局域网）之间的互联互通。PC1 到 PC2 发送的数据包是经过路由器，从路由器 f0/0 入，再从 f0/0 出，所以称之为单臂路由。</p>
<h2 id="实验拓扑"><a href="#实验拓扑" class="headerlink" title="实验拓扑"></a>实验拓扑</h2><p><img src="http://okmotl0nl.bkt.clouddn.com/route-on-a-stick1.png" alt=""></p>
<h2 id="实验设备"><a href="#实验设备" class="headerlink" title="实验设备"></a>实验设备</h2><ul>
<li>DCS 二层交换机1台，DCR 路由器1台；</li>
<li>PC机2台，电源线、console 线揽各2条，网线3条</li>
</ul>
<h2 id="实验要求"><a href="#实验要求" class="headerlink" title="实验要求"></a>实验要求</h2><ul>
<li>PC1、PC2 设置IP地址，使用 ping 命令测试他们之间的连通性。</li>
<li>在交换机上按照拓扑图创建 VLAN，并将相应的端口加入 VLAN 中。</li>
<li>配置 Trunk 端口实现不同 VLAN 间的通信。</li>
</ul>
<h2 id="实验步骤"><a href="#实验步骤" class="headerlink" title="实验步骤"></a>实验步骤</h2><h3 id="物理设备连接"><a href="#物理设备连接" class="headerlink" title="物理设备连接"></a>物理设备连接</h3><p>（1）将交换机与路由器的配置线的一端与各自的 console 口连接,另一端分别与与 PC1、PC2 的串口相连。<br>（2）两条网线将PC1与交换机 f0/1、PC2 与交换机 f0/6 相连，剩下一条网线<strong>连接路由器的 TP0 端口和交换机的 f0/24 </strong>（Trunk）。</p>
<h3 id="测试机配置"><a href="#测试机配置" class="headerlink" title="测试机配置"></a>测试机配置</h3><p>PC1，ip 192.168.10.2 gateway 192.168.10.1<br>PC2，ip 192.168.20.2 gateway 192.168.20.1<br>测试 PC1 ping PC2，结果：ping 不通，因为它们在不同的网络段，而不同网络的主机间访问必须通过路由实现。</p>
<h3 id="DCS-配置"><a href="#DCS-配置" class="headerlink" title="DCS 配置"></a>DCS 配置</h3><p>（1）创建 vlan100, 端口组成员1-5；创建 vlan200, 端口组成员6-10<br>（2）对交换机24口打标记，作为汇聚端口<br><img src="http://okmotl0nl.bkt.clouddn.com/route-on-a-stick2.png" alt=""></p>
<h3 id="DCR-配置"><a href="#DCR-配置" class="headerlink" title="DCR 配置"></a>DCR 配置</h3><p>（1）配置路由器 f0/0 的逻辑子接口；<br>（2）为子接口封装 802.1Q 协议、VLAN 标识；<br>（3）为子接口划分网关地址；<br><img src="http://okmotl0nl.bkt.clouddn.com/route-on-a-stick3.png" alt="">（4）运行<code>show ip route</code>察看路由表。<br><img src="http://okmotl0nl.bkt.clouddn.com/route-on-a-stick4.png" alt=""><br><strong>实验结果</strong>：PC1 与 PC2 可以互相 ping 通。<img src="http://okmotl0nl.bkt.clouddn.com/ping20dot2.png" alt=""><img src="http://okmotl0nl.bkt.clouddn.com/ping10dot2.png" alt=""></p>
<h2 id="相关知识"><a href="#相关知识" class="headerlink" title="相关知识"></a>相关知识</h2><p>（1）<strong>虚拟局域网</strong>：局域网内的通信是通过数据帧头部的目标主机的MAC地址来完成的。在使用TCP/IP协议的网络中，需要通过ARP地址解析协议来查找某一IP地址对应的MAC地址。而ARP是通过广播报文来实现的，如果广播报文无法到达目的地，那么就无法解析到MAC地址，进而无法直接通信。当计算机分别位于不同的VLAN时，就意味这些计算机分别属于不同的广播域，所以不同VLAN中的计算机由于收不到彼此的广播报文就无法直接互相通信。</p>
<p>（2）<strong>802.1Q标准</strong>：指虚拟局域网使用的以太网帧格式。IEEE802.1Q协议允许在以太网的帧格式中插入一个4字节的标识符，称为VLAN标记(tag)；协议最多支持250个VLAN，其中VLAN1是不可删除的默认VLAN。VLAN标记(tag)包括：2字节的标记类型(VPID)，2字节的标记控制信息(VCL)，VCL又包括12bit的VID(VLAN标识符)——指明这个以太网帧属于哪一个VLAN，当数据帧通过交换机的时候，交换机根据数据帧中tag的VID信息，来识别它所在的VLAN。</p>
<p><img src="http://okmotl0nl.bkt.clouddn.com/route-on-a-stick5.png" alt=""><br>（3）<strong>Trunk端口</strong>：VLAN中继也称为VLAN干道。它把多个物理端口捆绑在一起当作一个逻辑端口使用；在两个交换机间的连接电路中，它能够使不同VLAN的数据帧实现中继传输；配置成Trunk模式的交换机端口不属于某个VLAN，而是用于承载所有VLAN间的数据帧。</p>
<hr>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[ZOJ 3785 What day is that day?]]></title>
      <url>http://bluebells.tk/2017/03/05/ZOJ-3785-What-day-is-that-day/</url>
      <content type="html"><![CDATA[<p>Time Limit: 2 Seconds      Memory Limit: 65536 KB<br><a href="http://acm.zju.edu.cn/onlinejudge/showProblem.do?problemId=5272" target="_blank" rel="external">It’s Saturday today, what day is it after $1^1 + 2^2 + 3^3 + … + N^N$ days?</a><br><strong>Input</strong><br>There are multiple test cases. The first line of input contains an integer T indicating the number of test cases. For each test case:<br>There is only one line containing one integer N (1 &lt;= N &lt;= 1000000000).<br><strong>Output</strong><br>For each test case, output one string indicating the day of week.<br><strong>Sample Input</strong><br>2<br>1<br>2<br><strong>Sample Output</strong><br>Sunday<br>Thursday<br><strong>Hint</strong><br>A week consists of Sunday, Monday, Tuesday, Wednesday, Thursday, Friday and Saturday.</p>
<hr>
<p><strong>思路</strong><br>要算出最后是星期几，只要把天数模7就能得到增长了的星期数，从而换算出具体星期。计算式子：<br>$$(1^1+2^2+3^3+…+N^N)\%7=$$$$1^1\%7+2^2\%7+3^3\%7+…+N^N\%7$$<br>当 a&gt;=7 时，<br><strong>a\%7=0</strong>，有$a^a\%7=0$，即$7^7\%7=0,14^{14\%7=0$;<br><strong>a\%7\neq0,a>7</strong>，根据二项式定理：<br>$$(a+b)^n=C_n^0a^n+C_n^1a^{n-1}b+…+C_n^{n-1}a^1b^{n-1}+C_n^nb^n$$所以有：$a^n\%7=(7+a-7)^n\%7=(a-7)^n$，如：$9^9\%7=2^9$<br>根据这个规律有：$$<br>\begin{array}{|c|c|}<br>\hline a^a &amp; 1 &amp; 2 &amp; 3 &amp; 4 &amp; 5 &amp; 6 &amp; 7 \\<br>\hline 1 &amp; 1^1 &amp; 2^2 &amp; 3^3 &amp; 4^4 &amp; 5^5 &amp; 6^6 &amp; 0 \\<br>\hline 2 &amp; 1^8 &amp; 2^9 &amp; 3^{10} &amp; 4^{11} &amp; 5^{12} &amp; 6^{13} &amp; 0 \\<br>\hline 3 &amp; 1^{15} &amp; 2^{16} &amp; 3^{17} &amp; 4^{18} &amp; 5^{19} &amp; 6^{20} &amp; 0 \\<br>\hline 4 &amp; 1^{22} &amp; 2^{23} &amp; 3^{24} &amp; 4^{25} &amp; 5^{26} &amp; 6^{27} &amp; 0 \\<br>\hline 5 &amp; 1^{29} &amp; 2^{30} &amp; 3^{31} &amp; 4^{32} &amp; 5^{33} &amp; 6^{34} &amp; 0 \\<br>\hline 6 &amp; 1^{36} &amp; 2^{37} &amp; 3^{38} &amp; 4^{39} &amp; 5^{40} &amp; 6^{41} &amp; 0 \\<br>\hline<br>\end{array}<br>$$又根据费马小定理：$a^n=a(mod n)$，得：$a^7=a(mod 7)$；所以有：$$<br>\begin{array}{|c|c|}<br>\hline a^a &amp; 1 &amp; 2 &amp; 3 &amp; 4 &amp; 5 &amp; 6 &amp; 7 \\<br>\hline 1 &amp; 1^1 &amp; 2^2 &amp; 3^3 &amp; 4^4 &amp; 5^5 &amp; 6^6 &amp; 0 \\<br>\hline 2 &amp; 1^2 &amp; 2^3 &amp; 3^4 &amp; 4^5 &amp; 5^6 &amp; 6^7 &amp; 0 \\<br>\hline 3 &amp; 1^3 &amp; 2^4 &amp; 3^5 &amp; 4^6 &amp; 5^7 &amp; 6^8 &amp; 0 \\<br>\hline 4 &amp; 1^4 &amp; 2^5 &amp; 3^6 &amp; 4^7 &amp; 5^8 &amp; 6^9 &amp; 0 \\<br>\hline 5 &amp; 1^5 &amp; 2^6 &amp; 3^7 &amp; 4^8 &amp; 5^9 &amp; 6^{10} &amp; 0 \\<br>\hline 6 &amp; 1^6 &amp; 2^7 &amp; 3^8 &amp; 4^9 &amp; 5^{10} &amp; 6^{11} &amp; 0 \\<br>\hline<br>\end{array} $$表格中第二列说明了6层1循环，循环节是42。接下来是模运算，先计算第一层，后面逐层对上一层结果乘底数取模即可：$$<br>\begin{array}{|c|c|}<br>\hline a^a\%7 &amp; 1 &amp; 2 &amp; 3 &amp; 4 &amp; 5 &amp; 6 &amp; 7 \\<br>\hline 1 &amp; 1 &amp; 4 &amp; 6 &amp; 4 &amp; 3 &amp; 1 &amp; 0 \\<br>\hline 2 &amp; 1 &amp; 1 &amp; 4 &amp; 2 &amp; 1 &amp; 6 &amp; 0 \\<br>\hline 3 &amp; 1 &amp; 2 &amp; 5 &amp; 1 &amp; 5 &amp; 1 &amp; 0 \\<br>\hline 4 &amp; 1 &amp; 4 &amp; 1 &amp; 4 &amp; 4 &amp; 6 &amp; 0 \\<br>\hline 5 &amp; 1 &amp; 1 &amp; 3 &amp; 2 &amp; 6 &amp; 1 &amp; 0 \\<br>\hline 6 &amp; 1 &amp; 2 &amp; 2 &amp; 1 &amp; 2 &amp; 6 &amp; 0 \\<br>\hline<br>\end{array} $$<br>然后从 a=2 开始做加法，接着再从a=43开始，把上一个循环节的尾部元素与第一个循环节的对应位置元素依次相加。观察到第一个循环节的尾部元素为6，第二个为5，…第七个为0，故最终的取和循环节长度为42*7=294。通过打表输出这些数字，得到代码：<br><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span> </span></div><div class="line"><span class="keyword">char</span> day[<span class="number">294</span>] = &#123;</div><div class="line"><span class="number">1</span>,<span class="number">5</span>,<span class="number">4</span>,<span class="number">1</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">5</span>,</div><div class="line"><span class="number">6</span>,<span class="number">0</span>,<span class="number">4</span>,<span class="number">6</span>,<span class="number">0</span>,<span class="number">6</span>,<span class="number">6</span>,</div><div class="line"><span class="number">0</span>,<span class="number">2</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">6</span>,<span class="number">0</span>,<span class="number">0</span>,</div><div class="line"><span class="number">1</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">3</span>,<span class="number">0</span>,<span class="number">6</span>,<span class="number">6</span>,</div><div class="line"><span class="number">0</span>,<span class="number">1</span>,<span class="number">4</span>,<span class="number">6</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">6</span>,</div><div class="line"><span class="number">0</span>,<span class="number">2</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">0</span>,<span class="number">6</span>,<span class="number">6</span>,</div><div class="line"><span class="number">0</span>,<span class="number">4</span>,<span class="number">3</span>,<span class="number">0</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">4</span>,</div><div class="line"><span class="number">5</span>,<span class="number">6</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">5</span>,<span class="number">5</span>,</div><div class="line"><span class="number">6</span>,<span class="number">1</span>,<span class="number">6</span>,<span class="number">0</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">6</span>,</div><div class="line"><span class="number">0</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">2</span>,<span class="number">6</span>,<span class="number">5</span>,<span class="number">5</span>,</div><div class="line"><span class="number">6</span>,<span class="number">0</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">5</span>,</div><div class="line"><span class="number">6</span>,<span class="number">1</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">6</span>,<span class="number">5</span>,<span class="number">5</span>,</div><div class="line"><span class="number">6</span>,<span class="number">3</span>,<span class="number">2</span>,<span class="number">6</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">3</span>,</div><div class="line"><span class="number">4</span>,<span class="number">5</span>,<span class="number">2</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">4</span>,<span class="number">4</span>,</div><div class="line"><span class="number">5</span>,<span class="number">0</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">5</span>,</div><div class="line"><span class="number">6</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">1</span>,<span class="number">5</span>,<span class="number">4</span>,<span class="number">4</span>,</div><div class="line"><span class="number">5</span>,<span class="number">6</span>,<span class="number">2</span>,<span class="number">4</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">4</span>,</div><div class="line"><span class="number">5</span>,<span class="number">0</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">4</span>,<span class="number">4</span>,</div><div class="line"><span class="number">5</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">5</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">2</span>,</div><div class="line"><span class="number">3</span>,<span class="number">4</span>,<span class="number">1</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">3</span>,<span class="number">3</span>,</div><div class="line"><span class="number">4</span>,<span class="number">6</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">4</span>,</div><div class="line"><span class="number">5</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">0</span>,<span class="number">4</span>,<span class="number">3</span>,<span class="number">3</span>,</div><div class="line"><span class="number">4</span>,<span class="number">5</span>,<span class="number">1</span>,<span class="number">3</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">3</span>,</div><div class="line"><span class="number">4</span>,<span class="number">6</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">4</span>,<span class="number">3</span>,<span class="number">3</span>,</div><div class="line"><span class="number">4</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">4</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,</div><div class="line"><span class="number">2</span>,<span class="number">3</span>,<span class="number">0</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">2</span>,<span class="number">2</span>,</div><div class="line"><span class="number">3</span>,<span class="number">5</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">3</span>,</div><div class="line"><span class="number">4</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">6</span>,<span class="number">3</span>,<span class="number">2</span>,<span class="number">2</span>,</div><div class="line"><span class="number">3</span>,<span class="number">4</span>,<span class="number">0</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">2</span>,</div><div class="line"><span class="number">3</span>,<span class="number">5</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">3</span>,<span class="number">2</span>,<span class="number">2</span>,</div><div class="line"><span class="number">3</span>,<span class="number">0</span>,<span class="number">6</span>,<span class="number">3</span>,<span class="number">6</span>,<span class="number">0</span>,<span class="number">0</span>,</div><div class="line"><span class="number">1</span>,<span class="number">2</span>,<span class="number">6</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">1</span>,</div><div class="line"><span class="number">2</span>,<span class="number">4</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">2</span>,</div><div class="line"><span class="number">3</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">5</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">1</span>,</div><div class="line"><span class="number">2</span>,<span class="number">3</span>,<span class="number">6</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,</div><div class="line"><span class="number">2</span>,<span class="number">4</span>,<span class="number">6</span>,<span class="number">0</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">1</span>,</div><div class="line"><span class="number">2</span>,<span class="number">6</span>,<span class="number">5</span>,<span class="number">2</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">6</span>,</div><div class="line"><span class="number">0</span>,<span class="number">1</span>,<span class="number">5</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,</div><div class="line"><span class="number">1</span>,<span class="number">3</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,</div><div class="line"><span class="number">2</span>,<span class="number">6</span>,<span class="number">0</span>,<span class="number">4</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,</div><div class="line"><span class="number">1</span>,<span class="number">2</span>,<span class="number">5</span>,<span class="number">0</span>,<span class="number">6</span>,<span class="number">0</span>,<span class="number">0</span>,</div><div class="line"><span class="number">1</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span></div><div class="line">&#125;;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">int</span> i,t;</div><div class="line">    <span class="keyword">int</span> a;</div><div class="line">    <span class="keyword">char</span> str[<span class="number">7</span>][<span class="number">10</span>]=&#123;<span class="string">"Saturday"</span>, <span class="string">"Sunday"</span>, <span class="string">"Monday"</span>, <span class="string">"Tuesday"</span>, <span class="string">"Wednesday"</span>,<span class="string">"Thursday"</span>, <span class="string">"Friday"</span>&#125;;   </div><div class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;t);</div><div class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;t; i++)&#123;</div><div class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a);</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"%s\n"</span>,str[day[(a<span class="number">-1</span>)%<span class="number">294</span>]]);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>注意：这段C代码可以AC，但是改成C++风格的输入输出就会报”Time Limit Exceeded”,Run Time(ms)为2001ms，正好超了1ms。<br>网上还找了一段可以AC的代码：<br><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span>  </span></div><div class="line"><span class="keyword">int</span> s[<span class="number">45</span>];  </div><div class="line"><span class="keyword">char</span> str[<span class="number">7</span>][<span class="number">10</span>]=&#123;<span class="string">"Saturday"</span>,<span class="string">"Sunday"</span>,<span class="string">"Monday"</span>,<span class="string">"Tuesday"</span>,<span class="string">"Wednesday"</span>,<span class="string">"Thursday"</span>,<span class="string">"Friday"</span>&#125;;  </div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span>  </span></div><div class="line">&#123;  </div><div class="line">    s[<span class="number">0</span>]=<span class="number">0</span>;  </div><div class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">44</span>;i++)  </div><div class="line">    &#123;  </div><div class="line">        <span class="keyword">int</span> flag=i%<span class="number">7</span>;  </div><div class="line">        <span class="keyword">int</span> ans=<span class="number">1</span>;  </div><div class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=i;j++)  </div><div class="line">            ans=(ans*flag)%<span class="number">7</span>; <span class="comment">//每乘一次就取模一次 </span></div><div class="line">        s[i]=ans;  </div><div class="line">    &#125;  </div><div class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">44</span>;i++)  </div><div class="line">        s[i]+=s[i<span class="number">-1</span>];  </div><div class="line">    <span class="keyword">int</span> t;  </div><div class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;t); </div><div class="line">    <span class="keyword">while</span>(t--)  </div><div class="line">    &#123;  </div><div class="line">        <span class="keyword">int</span> n;  </div><div class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);  </div><div class="line">        <span class="keyword">int</span> ans=(n/<span class="number">42</span>%<span class="number">7</span>*(s[<span class="number">42</span>]%<span class="number">7</span>)%<span class="number">7</span>+s[n%<span class="number">42</span>]%<span class="number">7</span>)%<span class="number">7</span>; <span class="comment">// </span></div><div class="line">        <span class="built_in">printf</span>(<span class="string">"%s\n"</span>,str[ans]);  </div><div class="line">    &#125;  </div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<hr>
<p><strong>参考资料：</strong><br><a href="http://www.cnblogs.com/Simon-X/p/5110328.html" target="_blank" rel="external">Simon_X ZOJ 3785 What day is that day?(今天是星期几？)</a><br><a href="http://blog.csdn.net/sdjzping/article/details/23624843" target="_blank" rel="external">sdjzping的专栏 ZOJ 3785 What day is that day? （找规律）</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Canvas——图片像素化]]></title>
      <url>http://bluebells.tk/2017/03/03/canvas-image-pixelation/</url>
      <content type="html"><![CDATA[<h3 id="基础知识："><a href="#基础知识：" class="headerlink" title="基础知识："></a>基础知识：</h3><ul>
<li><strong>drawImage(image, x, y, [width], [height])</strong>——绘制图像，参数image可以是HTML img元素、HTML5 canvas元素或video元素。</li>
<li><strong><a href="http://bluebells.tk/2017/02/07/canvasPixelArray-mosaic/">getImageData(x, y, width, height)</a></strong>——画布中访问像素数据，返回一个2D渲染上下文<strong>ImageData对象</strong>，它包含3个属性：width、height、<strong>data</strong>(存储全部像素信息CanvasPixelArray)。</li>
<li><strong>FileReader</strong>——FileReader对象允许Web应用程序异步读取存储在用户计算机上的文件（或原始数据缓冲区）的内容，使用<a href="https://developer.mozilla.org/zh-CN/docs/Web/API/File" target="_blank" rel="external"> File </a>或<a href="https://developer.mozilla.org/zh-CN/docs/Web/API/Blob" target="_blank" rel="external"> Blob </a>对象指定要读取的文件或数据。<a id="more"></a></li>
<li><strong>readAsDataURL()</strong>——开始读取指定的Blob对象或File对象中的内容。当读取操作完成时，readyState属性的值会成为DONE,如果设置了onloadend事件处理程序,则调用之。同时，<strong>result</strong>属性中将包含一个<strong>data</strong>: URL格式的字符串以表示所读取文件的内容。</li>
</ul>
<h3 id="实现方法："><a href="#实现方法：" class="headerlink" title="实现方法："></a>实现方法：</h3><ul>
<li>实例化FileReader对象，readAsDataURL读取图像内容</li>
<li>通过result属性获取data集合，并赋给图像src属性</li>
<li>drawImage绘制图像到canvas上显示</li>
<li>getImageData获取canvas上的图像数据</li>
<li>根据块的行数和列数遍历图像的每一块<ul>
<li>计算当前块的中心位置坐标</li>
<li>计算CanvasPixelArray中块的中心像素索引值</li>
<li>根据索引值获取像素集合中的像素颜色</li>
<li>绘制圆形路径并填充</li>
</ul>
</li>
</ul>
<h3 id="实现步骤："><a href="#实现步骤：" class="headerlink" title="实现步骤："></a>实现步骤：</h3><h4 id="基础性工作"><a href="#基础性工作" class="headerlink" title="基础性工作"></a>基础性工作</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">h2</span>&gt;</span>Canvas-image-pixelation<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span> = <span class="string">"file"</span> <span class="attr">id</span> = <span class="string">"file"</span> <span class="attr">name</span> = <span class="string">"file"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span>小块尺寸</div><div class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">id</span> = <span class="string">"size"</span> <span class="attr">name</span> = <span class="string">"text"</span> <span class="attr">style</span>=<span class="string">"width:62px; margin-bottom: 5px"</span>&gt;</span>(2-25)</div><div class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"sizeOK"</span>&gt;</span>确定<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"export"</span>&gt;</span>导出<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="comment">&lt;!--换行为了避免按钮位置移动而触发失败--&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">canvas</span> <span class="attr">id</span>=<span class="string">"myCanvas"</span> <span class="attr">width</span>=<span class="string">"600"</span> <span class="attr">height</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">canvas</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> canvas = <span class="built_in">document</span>.getElementById(<span class="string">'myCanvas'</span>);</div><div class="line"><span class="keyword">var</span> context = canvas.getContext(<span class="string">"2d"</span>);</div><div class="line"><span class="keyword">var</span> image = <span class="keyword">new</span> Image(); <span class="comment">//实例化一个Image对象</span></div><div class="line">image.originCrossing = <span class="string">"anonymous"</span>; <span class="comment">//允许由从外部来源加载图像，并在canvas中使用</span></div><div class="line">$(<span class="string">'#file'</span>).change(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="comment">//获取图像数据</span></div><div class="line">&#125;);</div><div class="line">image.onload=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    setImageWidth(<span class="number">600</span>); <span class="comment">//以宽度600为准，根据图像调整canvas高度</span></div><div class="line">    context.drawImage(image, <span class="number">0</span>, <span class="number">0</span>, canvas.width, canvas.height); <span class="comment">//绘制图像</span></div><div class="line">    <span class="keyword">var</span> imageData = context.getImageData(<span class="number">0</span>, <span class="number">0</span>, canvas.width, canvas.height);</div><div class="line">    <span class="keyword">var</span> pixels = imageData.data; <span class="comment">// CanvasPixelArray</span></div><div class="line">    $(<span class="string">'#sizeOK'</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">        <span class="keyword">var</span> size = $(<span class="string">'#size'</span>).val(); <span class="comment">// 每个块的尺寸</span></div><div class="line">        <span class="comment">// 原始图像的马赛克块个数</span></div><div class="line">        <span class="keyword">var</span> numTileRows = <span class="built_in">Math</span>.floor(image.height/size), <span class="comment">//floor可能会舍弃边界右,下的一点</span></div><div class="line">            numTileCols = <span class="built_in">Math</span>.floor(image.width/size);</div><div class="line">        context.clearRect(<span class="number">0</span>, <span class="number">0</span>, $(<span class="string">'canvas'</span>).width(), $(<span class="string">'canvas'</span>).height()); <span class="comment">// 从画布清除图像</span></div><div class="line">        <span class="comment">//根据块数重新设置canvas宽高(此时width&lt;=600)</span></div><div class="line">        setImageWidth(numTileCols*size, numTileRows*size, multiW, multiH); </div><div class="line">        <span class="comment">// 实际的马赛克块个数</span></div><div class="line">        <span class="keyword">var</span> numRows = canvas.height/size +<span class="number">1</span>,</div><div class="line">            numCols = canvas.width/size +<span class="number">1</span>;</div><div class="line">        <span class="keyword">for</span>(<span class="keyword">var</span> r=<span class="number">0</span>; r&lt;numRows; r++) &#123; <span class="comment">// 块行</span></div><div class="line">            <span class="keyword">for</span>(<span class="keyword">var</span> c=<span class="number">0</span>; c&lt;numCols; c++) &#123; <span class="comment">// 块列</span></div><div class="line">                <span class="comment">//像素化绘制……</span></div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="获取图像数据"><a href="#获取图像数据" class="headerlink" title="获取图像数据"></a>获取图像数据</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">'#file'</span>).change(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="keyword">var</span> imgFile = <span class="keyword">new</span> FileReader(); <span class="comment">//实例化一个FileReader对象</span></div><div class="line">    imgFile.readAsDataURL(<span class="keyword">this</span>.files[<span class="number">0</span>]); <span class="comment">//读取文件  </span></div><div class="line">    imgFile.onload = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;  </div><div class="line">        <span class="keyword">var</span> imgBase64 = <span class="keyword">this</span>.result; <span class="comment">//读取base64数据    </span></div><div class="line">        image.src = imgBase64;</div><div class="line">    &#125; </div><div class="line">    $(<span class="string">'span'</span>).text(<span class="string">'   加载中，请稍后...'</span>); </div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<h4 id="根据图像宽高比来改变canvas高度"><a href="#根据图像宽高比来改变canvas高度" class="headerlink" title="根据图像宽高比来改变canvas高度"></a>根据图像宽高比来改变canvas高度</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">setImageWidth</span>(<span class="params">w,h,mW=<span class="number">1</span>,mH=<span class="number">1</span></span>)</span>&#123; <span class="comment">//mW,mH表示原图与canvas画布的宽高比</span></div><div class="line">    <span class="keyword">if</span>(image.width&gt;<span class="number">600</span>)&#123;</div><div class="line">        <span class="keyword">if</span>(mW &gt; <span class="number">1</span>) &#123;</div><div class="line">            canvas.width = w/mW;</div><div class="line">            canvas.height = h/mH;						</div><div class="line">        &#125; <span class="keyword">else</span> &#123;</div><div class="line">            canvas.width =<span class="number">600</span>;</div><div class="line">            canvas.height = image.height / (image.width/<span class="number">600</span>);						</div><div class="line">        &#125;</div><div class="line">    &#125; <span class="keyword">else</span> &#123;</div><div class="line">        canvas.width = image.width;</div><div class="line">        canvas.height = image.height;				</div><div class="line">    &#125;			</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="像素化绘制"><a href="#像素化绘制" class="headerlink" title="像素化绘制"></a>像素化绘制</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">for</span>(<span class="keyword">var</span> r=<span class="number">0</span>; r&lt;numRows; r++) &#123; <span class="comment">// 块行</span></div><div class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> c=<span class="number">0</span>; c&lt;numCols; c++) &#123; <span class="comment">// 块列</span></div><div class="line">        <span class="comment">// 当前块的中心位置元素从0开始表示的(x,y)坐标</span></div><div class="line">        <span class="keyword">var</span> x = c * size + size / <span class="number">2</span>,</div><div class="line">            y = r * size + size / <span class="number">2</span>;</div><div class="line">        <span class="comment">// 绘制最后一列后面还有空余时，取空余宽度中间位置的x</span></div><div class="line">        <span class="keyword">if</span>(c == <span class="built_in">Math</span>.floor(canvas.width/size))&#123;</div><div class="line">            x = c * size + (canvas.width - c * size)/<span class="number">2</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="comment">// 绘制最后一行下面还有空余时，取空余高度中间位置的y</span></div><div class="line">        <span class="keyword">if</span>(r == <span class="built_in">Math</span>.floor(canvas.height/size))&#123;</div><div class="line">            y = r * size + (canvas.height - r * size)/<span class="number">2</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="comment">// CanvasPixelArray中该像素的索引值</span></div><div class="line">        <span class="keyword">var</span> pos = (<span class="built_in">Math</span>.floor(y<span class="number">-0.5</span>)* (imageData.width * <span class="number">4</span>)) + (<span class="built_in">Math</span>.floor(x<span class="number">-0.5</span>) * <span class="number">4</span>);      </div><div class="line">        <span class="keyword">var</span> red = pixels[pos], <span class="comment">// r</span></div><div class="line">            green = pixels[pos+<span class="number">1</span>], <span class="comment">// g</span></div><div class="line">            blue = pixels[pos+<span class="number">2</span>]; <span class="comment">// b</span></div><div class="line">        <span class="comment">// 设置填充颜色</span></div><div class="line">        context.fillStyle = <span class="string">"rgb("</span> +red+ <span class="string">","</span> +green+ <span class="string">","</span> +blue+ <span class="string">")"</span>;</div><div class="line">        <span class="comment">//context.fillRect(x-size/2, y-size/2, size, size); //绘制方块</span></div><div class="line">        context.beginPath();</div><div class="line">        context.arc(x, y, size/<span class="number">2</span>, <span class="built_in">Math</span>.PI*<span class="number">2</span>, <span class="literal">false</span>); <span class="comment">//绘制圆形</span></div><div class="line">        context.closePath();</div><div class="line">        context.fill();</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="最终效果："><a href="#最终效果：" class="headerlink" title="最终效果："></a>最终效果：</h3><script async src="//jsfiddle.net/bluebells/5kwrhodv/embed/"></script>

<hr>
<h3 id="参考资料："><a href="#参考资料：" class="headerlink" title="参考资料："></a>参考资料：</h3><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/API/FileReader" target="_blank" rel="external">FileReader</a><br><a href="https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image" target="_blank" rel="external">CORS enabled image</a><br><a href="http://blog.csdn.net/qwertyupoiuytr/article/details/53999409?locationNum=13&amp;fps=1" target="_blank" rel="external">手把手教你如何将图片“嵌入”网页中</a><br><a href="http://cobain-li.iteye.com/blog/2323237" target="_blank" rel="external">js小工具—本地图片转换为base64编码数据</a><br><a href="https://segmentfault.com/q/1010000005639819" target="_blank" rel="external">html file 上传后如何在旁边显示上传的图片</a><br><a href="http://blog.okbase.net/jquery2000/archive/1296.html" target="_blank" rel="external">使用FileReader对象的readAsDataURL方法来读取图像文件</a><br><a href="http://www.apress.com/cn/book/9781430232919" target="_blank" rel="external">《Foundation HTML5 Canvas For Games and Entertainment》Chapter 5 Authors: Hawkes, Rob</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Canvas动画---反弹]]></title>
      <url>http://bluebells.tk/2017/02/14/canvas-animation-rebound/</url>
      <content type="html"><![CDATA[<blockquote>
<p>判断一个形状是否超过画布的右边界——即检查形状的x位置是否超过了画布的宽度。</p>
</blockquote>
<h3 id="如何让形状在画布的边界处弹回？"><a href="#如何让形状在画布的边界处弹回？" class="headerlink" title="如何让形状在画布的边界处弹回？"></a>如何让形状在画布的边界处弹回？</h3><h4 id="1、首先需要在Shape类中添加新属性，它们将用于定义形状是否碰到边界及反弹的路径方向："><a href="#1、首先需要在Shape类中添加新属性，它们将用于定义形状是否碰到边界及反弹的路径方向：" class="headerlink" title="1、首先需要在Shape类中添加新属性，它们将用于定义形状是否碰到边界及反弹的路径方向："></a>1、首先需要在<code>Shape</code>类中添加新属性，它们将用于定义形状是否碰到边界及反弹的路径方向：</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">this</span>.reverseX = <span class="literal">false</span>;</div><div class="line"><span class="keyword">this</span>.reverseY = <span class="literal">false</span>;</div></pre></td></tr></table></figure>
<p>默认情况下，这些属性的值为<code>false</code>，在本示例中，这表明形状将一直<strong>向右下方运动</strong>。</p>
<h4 id="2、添加逻辑关系来检查形状是否超出画布边界："><a href="#2、添加逻辑关系来检查形状是否超出画布边界：" class="headerlink" title="2、添加逻辑关系来检查形状是否超出画布边界："></a>2、添加逻辑关系来检查形状是否超出画布边界：</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span> (shapes[i].x &lt; <span class="number">0</span>) &#123;</div><div class="line">    shapes[i].reverseX = <span class="literal">false</span>;</div><div class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span>(shapes[i].x + shapes[i].width &gt; canvas.width) &#123;</div><div class="line">    shapes[i].reverseX = <span class="literal">true</span>;</div><div class="line">&#125;</div><div class="line"><span class="keyword">if</span> (shapes[i].y &lt; <span class="number">0</span>) &#123;</div><div class="line">    shapes[i].reverseY = <span class="literal">false</span>;</div><div class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span>(shapes[i].y + shapes[i].height &gt; canvas.height) &#123;</div><div class="line">    shapes[i].reverseY = <span class="literal">true</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>当形状即将到达边界之外时，这些检查将反向改变形状的运动路线。但仅设置布尔值还不够。</p>
<h4 id="3、根据是否到达边界之外，执行正向或反向偏移："><a href="#3、根据是否到达边界之外，执行正向或反向偏移：" class="headerlink" title="3、根据是否到达边界之外，执行正向或反向偏移："></a>3、根据是否到达边界之外，执行正向或反向偏移：</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span> (!shapes[i].reverseX) &#123;</div><div class="line">    shapes[i].x += shapes[i].step;</div><div class="line">&#125; <span class="keyword">else</span> &#123;</div><div class="line">    shapes[i].x -= shapes[i].step;</div><div class="line">&#125;</div><div class="line"><span class="keyword">if</span> (!shapes[i].reverseY) &#123;</div><div class="line">    shapes[i].y += shapes[i].step;</div><div class="line">&#125; <span class="keyword">else</span> &#123;</div><div class="line">    shapes[i].y -= shapes[i].step;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="最终效果"><a href="#最终效果" class="headerlink" title="最终效果"></a>最终效果</h3><h2 id=""><a href="#" class="headerlink" title=""></a><script async src="//jsfiddle.net/bluebells/wsufftng/embed/js,html,result/"></script></h2><p>参考资料：<a href="http://www.apress.com/cn/book/9781430232919" target="_blank" rel="external">《Foundation HTML5 Canvas For Games and Entertainment》Chapter 6 Authors: Hawkes, Rob</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Canvas动画---圆周运动]]></title>
      <url>http://bluebells.tk/2017/02/13/canvas-animation-circle/</url>
      <content type="html"><![CDATA[<h3 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h3><h4 id="动画循环的三要素："><a href="#动画循环的三要素：" class="headerlink" title="动画循环的三要素："></a>动画循环的三要素：</h4><ul>
<li><strong>清除</strong>画布</li>
<li><strong>更新</strong>需要绘制的对象</li>
<li>在画布中重新<strong>绘制</strong>对象<a id="more"></a></li>
</ul>
<p><strong>注意</strong>  在清除对象之前不要绘制对象</p>
<h4 id="创建动画循环："><a href="#创建动画循环：" class="headerlink" title="创建动画循环："></a>创建动画循环：</h4><script async src="//jsfiddle.net/bluebells/2cyrxyt2/embed/js,html,result/"></script>

<h4 id="记忆形状——对象"><a href="#记忆形状——对象" class="headerlink" title="记忆形状——对象"></a>记忆形状——对象</h4><blockquote>
<p>引入：如何准确记忆要绘制的对象的内容及位置？上一个基础动画采用的是：设置一个变量来保存对象的位置值x。但若需要绘制多个动画形状就得写很多类似的代码，且不易管理。所以可以考虑使用对象和数组来实现。</p>
</blockquote>
<ul>
<li>通过使用对象的属性和方法，可以为某些对象定义模板。</li>
<li>仅定义还不够，还需要通过数组来存储形状对象。</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> Shape = <span class="function"><span class="keyword">function</span>(<span class="params">x, y</span>) </span>&#123;</div><div class="line">    <span class="keyword">this</span>.x = x;</div><div class="line">    <span class="keyword">this</span>.y = y;</div><div class="line">&#125;</div><div class="line"><span class="keyword">var</span> shapes = <span class="keyword">new</span> <span class="built_in">Array</span>();</div><div class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>; i&lt;<span class="number">10</span>; i++) &#123;</div><div class="line">    shapes.push(<span class="keyword">new</span> Shape());</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">animate</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    ……</div><div class="line">    <span class="comment">// 更新并绘制</span></div><div class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; shapes.length; i++) &#123;</div><div class="line">        shapes[i].x++;</div><div class="line">        context.fillRect(x, y, <span class="number">10</span>, <span class="number">10</span>);</div><div class="line">    &#125;</div><div class="line">    ……</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="随机产生形状——Math-random"><a href="#随机产生形状——Math-random" class="headerlink" title="随机产生形状——Math.random()"></a>随机产生形状——Math.random()</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> Shape = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="keyword">this</span>.x = <span class="built_in">Math</span>.random()*canvas.width;</div><div class="line">    <span class="keyword">this</span>.y = <span class="built_in">Math</span>.random()*canvas.height;</div><div class="line">    <span class="keyword">this</span>.width = <span class="built_in">Math</span>.random()*<span class="number">50</span>;</div><div class="line">    <span class="comment">//this.height = this.width;</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="圆周运动——三角函数"><a href="#圆周运动——三角函数" class="headerlink" title="圆周运动——三角函数"></a>圆周运动——三角函数</h3><p>定义：形状在圆周的右边缘作为角度为0弧度的位置；<strong>a是角度，r是半径，x是邻边，y是对边。</strong><br>在每次动画循环中，只需增加圆周上的形状的角度，就可以使形状沿着圆周运动。<br>需要解决的问题：如何计算圆周上形状的(x,y)坐标值？<br>在已知角度a的条件下，根据三角函数有：<br>$$<br>sin(a) = \frac{y}{r},<br>cos(a) = \frac{x}{r}<br>$$<br>由此可以计算(x,y)坐标：<br>$$<br>x = r \ast Math.cos(a) \\<br>y = r \ast Math.sin(a)<br>$$<br>仍就上述例子，首先在<code>Shape</code>类中添加半径和初始化角度：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">this</span>.radius = <span class="built_in">Math</span>.random()*<span class="number">30</span>; <span class="comment">// 运动半径在0~30</span></div><div class="line"><span class="keyword">this</span>.angle = <span class="number">0</span>;</div></pre></td></tr></table></figure></p>
<p>再计算(x,y)坐标及角度变化：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> x = shapes[i].x + (shapes[i].radius * <span class="built_in">Math</span>.cos(shapes[i].angle * (<span class="built_in">Math</span>.PI/<span class="number">180</span>))),</div><div class="line">    y = shapes[i].y + (shapes[i].radius * <span class="built_in">Math</span>.sin(shapes[i].angle * (<span class="built_in">Math</span>.PI/<span class="number">180</span>)));</div><div class="line">shapes[i].angle += <span class="built_in">Math</span>.random()*<span class="number">10</span>; <span class="comment">// 角速度随机</span></div><div class="line"><span class="keyword">if</span>(shapes[i].angle &gt; <span class="number">360</span>) &#123;</div><div class="line">    shapes[i].angle = <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>到此，基本的圆周运动就可以实现。当然还可以做点修饰。</p>
<h4 id="添加随机颜色"><a href="#添加随机颜色" class="headerlink" title="添加随机颜色"></a>添加随机颜色</h4><p>在<code>Shape</code>类中添加<strong>rgba</strong>属性：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">this</span>.r = <span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random()*<span class="number">255</span>);</div><div class="line"><span class="keyword">this</span>.g = <span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random()*<span class="number">255</span>);</div><div class="line"><span class="keyword">this</span>.b = <span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random()*<span class="number">255</span>);	</div><div class="line"><span class="keyword">this</span>.a = <span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random()*<span class="number">255</span>);</div></pre></td></tr></table></figure></p>
<h4 id="绘制圆形形状"><a href="#绘制圆形形状" class="headerlink" title="绘制圆形形状"></a>绘制圆形形状</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 设置每个块的颜色</span></div><div class="line">context.fillStyle = <span class="string">'rgba('</span> +shapes[i].r+ <span class="string">','</span> +shapes[i].g+ <span class="string">','</span> +shapes[i].b+ <span class="string">','</span> +shapes[i].a+ <span class="string">')'</span>;</div><div class="line"><span class="comment">// 绘制圆形</span></div><div class="line">context.beginPath();</div><div class="line">context.arc(x+shapes[i].width/<span class="number">2</span>, y+shapes[i].width/<span class="number">2</span>, shapes[i].width/<span class="number">2</span>, <span class="built_in">Math</span>.PI*<span class="number">2</span>, <span class="literal">false</span>);</div><div class="line">context.closePath();</div><div class="line">context.fill();</div></pre></td></tr></table></figure>
<h3 id="最终效果"><a href="#最终效果" class="headerlink" title="最终效果"></a>最终效果</h3><script async src="//jsfiddle.net/bluebells/d1rcs6uw/embed/js,html,result/"></script>

<hr>
<p>参考资料：<a href="http://www.apress.com/cn/book/9781430232919" target="_blank" rel="external">《Foundation HTML5 Canvas For Games and Entertainment》Chapter 6 Authors: Hawkes, Rob</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Canvas——马赛克效果]]></title>
      <url>http://bluebells.tk/2017/02/07/canvasPixelArray-mosaic/</url>
      <content type="html"><![CDATA[<h3 id="基础知识："><a href="#基础知识：" class="headerlink" title="基础知识："></a>基础知识：</h3><ul>
<li><strong>getImageData(x, y, width, height)</strong>——画布中访问像素数据，返回一个2D渲染上下文<strong>ImageData对象</strong>，它包含3个属性：width、height、<strong>data</strong>(存储全部像素信息CanvasPixelArray)。<a id="more"></a><br>$$像素栅格\\<br>\begin{array}{|c|c|}<br>\hline 0 &amp; 4 &amp; 8 \\<br>\hline 12 &amp; 16 &amp; 20 \\<br>\hline 24 &amp; 28 &amp; 32 \\<br>\hline<br>\end{array}<br>$$$$CanvasPixelArray\\<br>\begin{array}{|c|c|}<br>\hline 0 &amp;4 &amp;8 &amp;12 &amp;16 &amp;20 &amp;…\\<br>\hline<br>\end{array}<br>$$$$<br>\begin{array}{|c|}<br>\hline 0 \\<br>\hline<br>\end{array}=<br>\begin{array}{|cccc|}<br>\hline 0 &amp;1 &amp;2 &amp;3 \\<br>r, &amp;g, &amp;b, &amp;a \\<br>\hline<br>\end{array}…$$</li>
<li><strong>createImageData(width, height)</strong>——创建像素数据，返回一个<strong>ImageData对象</strong>，包含的3个属性同上。</li>
<li><strong>putImageData(ImageData, x, y)</strong>——绘制像素数据</li>
<li><strong>Math.floor(Math.random()*255)</strong>——计算随机颜色值。</li>
</ul>
<h3 id="实现方法："><a href="#实现方法：" class="headerlink" title="实现方法："></a>实现方法：</h3><ul>
<li>创建一个新像素区域，获取像素数据</li>
<li>分割马赛克块，计算每个块的像素大小</li>
<li>遍历块<ul>
<li>计算随机颜色</li>
<li>遍历每个块的像素<ul>
<li>计算以0开始的像素位置坐标(x,y)</li>
<li>结合像素坐标和整个像素区域宽高计算像素的颜色值开始位置</li>
<li>设置像素的4个颜色值</li>
</ul>
</li>
</ul>
</li>
<li>绘制像素</li>
</ul>
<h3 id="实现步骤："><a href="#实现步骤：" class="headerlink" title="实现步骤："></a>实现步骤：</h3><h4 id="1、基础性工作"><a href="#1、基础性工作" class="headerlink" title="1、基础性工作"></a>1、基础性工作</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> context = <span class="built_in">document</span>.getElementById(<span class="string">'myCanvas'</span>).getContext(<span class="string">"2d"</span>);</div><div class="line"><span class="keyword">var</span> imageData = context.createImageData(<span class="number">400</span>, <span class="number">400</span>); <span class="comment">// 创建像素数据</span></div><div class="line"><span class="keyword">var</span> pixels = imageData.data; <span class="comment">// CanvasPixelArray</span></div><div class="line"></div><div class="line"><span class="comment">// 马赛克块的个数</span></div><div class="line"><span class="keyword">var</span> numTileRows = <span class="number">4</span>,</div><div class="line">    numTileCols = <span class="number">4</span>;</div><div class="line"><span class="comment">// 每个块的尺寸</span></div><div class="line"><span class="keyword">var</span> tileWidth = imageData.width / numTileCols,</div><div class="line">    tileHeight = imageData.height / numTileRows;</div><div class="line">	</div><div class="line"><span class="comment">// 遍历……</span></div><div class="line"></div><div class="line">context.putImageData(imageData, <span class="number">0</span>, <span class="number">0</span>); <span class="comment">// 绘制像素数据</span></div></pre></td></tr></table></figure>
<h4 id="2、遍历块并修改颜色值，块内遍历像素"><a href="#2、遍历块并修改颜色值，块内遍历像素" class="headerlink" title="2、遍历块并修改颜色值，块内遍历像素"></a>2、遍历块并修改颜色值，块内遍历像素</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">for</span>(<span class="keyword">var</span> r=<span class="number">0</span>; r&lt;numTileRows; r++) &#123; <span class="comment">// 块行4</span></div><div class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> c=<span class="number">0</span>; c&lt;numTileCols; c++) &#123; <span class="comment">// 块列4</span></div><div class="line">        <span class="comment">// 设置每个块的颜色</span></div><div class="line">        <span class="keyword">var</span> red = <span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random()*<span class="number">255</span>),</div><div class="line">            green = <span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random()*<span class="number">255</span>),</div><div class="line">            blue = <span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random()*<span class="number">255</span>);</div><div class="line">        <span class="comment">// 遍历像素	</span></div><div class="line">        <span class="keyword">for</span>(<span class="keyword">var</span> tr=<span class="number">0</span>; tr&lt;tileHeight; tr++) &#123; <span class="comment">// 像素行100</span></div><div class="line">            <span class="keyword">for</span>(<span class="keyword">var</span> tc=<span class="number">0</span>; tc&lt;tileWidth; tc++) &#123; <span class="comment">// 像素列100</span></div><div class="line">            <span class="comment">// </span></div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>现在得到的是所访问的块的行和列(r和c)，以及块中所处的像素的行和列(tr和tc)，这些变量不足以访问<strong>CanvasPixelArray</strong>中的像素。</p>
<h4 id="3、计算以0开始的像素位置坐标-x-y"><a href="#3、计算以0开始的像素位置坐标-x-y" class="headerlink" title="3、计算以0开始的像素位置坐标(x,y)"></a>3、计算以0开始的像素位置坐标(x,y)</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 计算像素的真实位置</span></div><div class="line"><span class="keyword">var</span> trueX = c * tileWidth + tc,</div><div class="line">    trueY = r * tileHeight + tr;</div></pre></td></tr></table></figure>
<h4 id="4、计算像素颜色值索引位置，赋值rgba"><a href="#4、计算像素颜色值索引位置，赋值rgba" class="headerlink" title="4、计算像素颜色值索引位置，赋值rgba"></a>4、计算像素颜色值索引位置，赋值rgba</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 计算像素红色值索引位置</span></div><div class="line"><span class="keyword">var</span> pos = ((trueY<span class="number">-1</span>) * (imageData.width * <span class="number">4</span>)) + ((trueX<span class="number">-1</span>) * <span class="number">4</span>);</div><div class="line">pixels[pos] = red; <span class="comment">// r</span></div><div class="line">pixels[pos+<span class="number">1</span>] = green; <span class="comment">// g</span></div><div class="line">pixels[pos+<span class="number">2</span>] = blue; <span class="comment">// b</span></div><div class="line">pixels[pos+<span class="number">3</span>] = <span class="number">255</span>; <span class="comment">// alpha</span></div></pre></td></tr></table></figure>
<h3 id="最终效果："><a href="#最终效果：" class="headerlink" title="最终效果："></a>最终效果：</h3><script async src="//jsfiddle.net/bluebells/nk6xg4tq/embed/js,html,result/"></script>

<hr>
<p>参考资料：<a href="http://www.apress.com/cn/book/9781430232919" target="_blank" rel="external">《Foundation HTML5 Canvas For Games and Entertainment》Chapter 5 Authors: Hawkes, Rob</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Canvas——复杂路径]]></title>
      <url>http://bluebells.tk/2017/02/05/canvas-complex-path/</url>
      <content type="html"><![CDATA[<h3 id="将多个路径连接在一起"><a href="#将多个路径连接在一起" class="headerlink" title="将多个路径连接在一起"></a>将多个路径连接在一起</h3><ul>
<li>开始路径</li>
<li>原点移到当前路径</li>
<li>从原点绘制一条线到指定点</li>
<li>再绘制一条线到另一个点<br>……</li>
<li>闭合路径</li>
</ul>
<p><strong>注意</strong> <strong>moveTo</strong>会创建一条全新的子路径，而<strong>lineTo</strong>只是沿着一条已有的子路径继续画线。子路径会记录我们所添加的最后一个坐标值，因而可以多次调用lineTo方法。lineTo的每次调用都是从子路径的最后一个坐标值（由moveTo和lineTo调用留下）开始画线，绘制一条连接lineTo参数所定义的坐标值，然后再将子路径更新到新的坐标值。<br><br>最后一步是调用<strong>closePath</strong>方法，它会画一条连接子路径的最后一个点个第一个点——封闭路径。它也会将起点和终点添加到子路径上，这两个点现在具有相同坐标值。</p>
<script async src="//jsfiddle.net/bluebells/0mvnva24/embed/js,html,result/"></script>

<h3 id="贝塞尔曲线"><a href="#贝塞尔曲线" class="headerlink" title="贝塞尔曲线"></a>贝塞尔曲线</h3><p>绘制一条具有相同半径的曲线，可以使用arc方法和arcTo方法。要创建一条更复杂的曲线，需要使用贝塞尔曲线方法：<strong>quadraticCurveTo或bezierCurveTo</strong>。两种贝塞尔曲线都是通过控制点将一条直线变成曲线。</p>
<h4 id="1-二次贝塞尔曲线-quadraticCurveTo-cpx-cpy-x-y"><a href="#1-二次贝塞尔曲线-quadraticCurveTo-cpx-cpy-x-y" class="headerlink" title="1. 二次贝塞尔曲线 quadraticCurveTo(cpx, cpy, x, y)"></a>1. 二次贝塞尔曲线 quadraticCurveTo(cpx, cpy, x, y)</h4><p>它只有一个控制点，意味着线条中只有一次弯曲。它有4个参数：控制点的<code>(cpx,cpy)</code>坐标，路径目标点的<code>(x,y)</code>坐标值。</p>
<h4 id="2-三次贝塞尔曲线-bezierCurveTo-cp1x-cp1y-cp2x-cp2y-x-y"><a href="#2-三次贝塞尔曲线-bezierCurveTo-cp1x-cp1y-cp2x-cp2y-x-y" class="headerlink" title="2. 三次贝塞尔曲线 bezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y)"></a>2. 三次贝塞尔曲线 bezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y)</h4><p>它有两个控制点，即线条中有两次弯曲。6个参数分别是：控制点1的<code>(cp1x,cp1y)</code>坐标，控制点2的<code>(cp2x,cp2y)</code>坐标，以及路径目标点的<code>(x,y)</code>坐标。</p>
<script async src="//jsfiddle.net/bluebells/xbk5uv2m/embed/js,html,result/"></script>

<hr>
<p>参考资料：<a href="http://www.apress.com/cn/book/9781430232919" target="_blank" rel="external">《Foundation HTML5 Canvas For Games and Entertainment》Chapter 4 Authors: Hawkes, Rob</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Canvas——阴影、渐变]]></title>
      <url>http://bluebells.tk/2017/02/05/canvas-shadow-gradient/</url>
      <content type="html"><![CDATA[<h3 id="阴影"><a href="#阴影" class="headerlink" title="阴影"></a>阴影</h3><p>创建阴影效果的唯一方法是将<code>shadowColor</code>修改为不透明值，同时将<code>shadowBlur</code>、<code>shadowOffsetX</code>或<code>shadowOffsetY</code>都设置为非0值。其中<code>shadowBlur</code>控制模糊度，后两者控制阴影的偏离距离。</p>
<script async src="//jsfiddle.net/bluebells/dyf32w92/embed/js,html,result/"></script>

<h3 id="渐变"><a href="#渐变" class="headerlink" title="渐变"></a>渐变</h3><p>画布支持两种类型的渐变：线性渐变和放射渐变。</p>
<ul>
<li>线性渐变——createLinearGradient</li>
<li>放射渐变——createRadialGradient</li>
</ul>
<p>两种渐变都返回一个<strong>CanvasGradient</strong>对象，<strong>fillStyle</strong>和<strong>strokeStyle</strong>都可以接受以CanvasGradient对象表示的渐变颜色值。</p>
<h4 id="createLinearGradient-beginX-beginY-endX-endY"><a href="#createLinearGradient-beginX-beginY-endX-endY" class="headerlink" title="createLinearGradient(beginX, beginY, endX, endY)"></a>createLinearGradient(beginX, beginY, endX, endY)</h4><p><strong>createLinearGradient</strong>方法有4个参数：渐变起点(x, y)坐标，渐变终点(x, y)坐标。起点和终点描述了渐变效果的长度、位置和方向。（例子中是从画布的左上角开始，延伸到左下角）<br>定义好渐变后还需要添加起点和终点的颜色，即<strong>addColorStop</strong>方法。它有两个参数：颜色的偏移值（0表示渐变起点，1表示渐变终点），以及该偏移的颜色值。（例子中是从起点黑色变化到白色）</p>
<script async src="//jsfiddle.net/bluebells/r87d9zpf/embed/js,html,result/"></script>

<h4 id="createRadialGradient-x0-y0-r0-x1-y1-r1"><a href="#createRadialGradient-x0-y0-r0-x1-y1-r1" class="headerlink" title="createRadialGradient(x0, y0, r0, x1, y1, r1)"></a>createRadialGradient(x0, y0, r0, x1, y1, r1)</h4><p><strong>createLinearGradient</strong>方法有4个参数：渐变起点(x, y)坐标，渐变终点(x, y)坐标。起点和终点描述了渐变效果的长度、位置和方向。实际的渐变效果是连接两个圆周的锥体，其中开始圆之前的锥体部分显示偏移值为0的颜色，而结束圆之后的锥体部分显示偏移值为1的颜色。（例子中左边图形的开始圆为黑色，慢慢褪色为结束圆的浅灰色，延伸到左上角，右边图形是将开始圆和结束圆放置在同一个位置。）</p>
<script async src="//jsfiddle.net/bluebells/ezqbjo06/embed/js,html,result/"></script>

<hr>
<p>参考资料：<a href="http://www.apress.com/cn/book/9781430232919" target="_blank" rel="external">《Foundation HTML5 Canvas For Games and Entertainment》Chapter 4 Authors: Hawkes, Rob</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Canvas——合成]]></title>
      <url>http://bluebells.tk/2017/02/04/canvas-globalCompositeOperation/</url>
      <content type="html"><![CDATA[<p>在画布中绘制的所有东西都是已经合成的，这意味着绘制的所有的东西都会与已经绘制的现有元素合并在一起。这些都是基本合成，只是将一些内容叠加到另一些内容之上。</p>
<h3 id="1-全局不透明度——globalAlpha属性"><a href="#1-全局不透明度——globalAlpha属性" class="headerlink" title="1. 全局不透明度——globalAlpha属性"></a>1. 全局不透明度——globalAlpha属性</h3><p>globalAlpha属性会影响将要绘制的对象的透明度，它的值必须在<code>0.0</code>(全透明)<code>1.0</code>(不透明)之间，默认值是<code>1.0</code>。通过给<code>fillStyle</code>设置一个小于1的alpha值的<code>rgba</code>值，也可以得到相同的效果。不同之处是，<strong>globalAlpha设置的是全局</strong>，它会在后续应用<code>rgba</code>颜色值等alpha值时被参照，即充当了计算其它alpha值的基数。（例子中设置了<code>globalAlpha</code>为0.5，然后又应用了一次<code>fillStyle</code>（带有alpha值为0.5的<code>rgba</code>），所以实际Alpha值为0.25）</p>
<script async src="//jsfiddle.net/bluebells/vuyep0uj/embed/js,html,result/"></script>

<h3 id="2-全局合成操作——globalCompositeOperation属性"><a href="#2-全局合成操作——globalCompositeOperation属性" class="headerlink" title="2. 全局合成操作——globalCompositeOperation属性"></a>2. 全局合成操作——globalCompositeOperation属性</h3><p>一个全新的2D渲染上下文会在一开始就使用合成，即一个图形叠加到另一个图形之上，这种合成称为<strong>源覆盖于目标之上</strong>(source over destination)。</p>
<ul>
<li>源是绘制的新图形</li>
<li>目标是绘制了图像的2D渲染上下文</li>
</ul>
<p>globalCompositeOperation属性的默认值就是<strong>source-over</strong>，它定义了对2D渲染上下文上所有绘制图形执行的11种合成类型。</p>
<table>
<thead>
<tr>
<th>属性</th>
<th>含义</th>
</tr>
</thead>
<tbody>
<tr>
<td>source-over</td>
<td>绘制的图形（源）将画在现有画布（目标）之上</td>
</tr>
<tr>
<td>destination-over</td>
<td>目标在源之上（与前一个相反）</td>
</tr>
<tr>
<td>source-atop</td>
<td>源在目标之上，只显示目标之内的源，目标之外的源变成透明</td>
</tr>
<tr>
<td>destination-atop</td>
<td>目标在源之上，只显示源之内的目标，源之外的目标变成透明</td>
</tr>
<tr>
<td>source-in</td>
<td>重叠区域绘制源，其它部分透明</td>
</tr>
<tr>
<td>destination-in</td>
<td>重叠区域绘制目标，其它部分透明</td>
</tr>
<tr>
<td>source-out</td>
<td>与目标不重叠区域绘制源，其它部分透明</td>
</tr>
<tr>
<td>destination-out</td>
<td>与源不重叠区域保留目标，整块源区域透明</td>
</tr>
<tr>
<td>lighter</td>
<td><strong>与顺序无关</strong>，重叠区域颜色值相加，最大值255白色</td>
</tr>
<tr>
<td>copy</td>
<td><strong>与顺序无关</strong>，只绘制源，覆盖掉目标</td>
</tr>
<tr>
<td>xor</td>
<td><strong>与顺序无关</strong>，只绘制不重叠的区域，重叠区域透明</td>
</tr>
</tbody>
</table>
<script async src="//jsfiddle.net/bluebells/pmctoy48/embed/"></script>

<hr>
<p>参考资料：<a href="http://www.apress.com/cn/book/9781430232919" target="_blank" rel="external">《Foundation HTML5 Canvas For Games and Entertainment》Chapter 4 Authors: Hawkes, Rob</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Canvas——变形]]></title>
      <url>http://bluebells.tk/2017/02/03/canvas-translate-scale-rotate-transform/</url>
      <content type="html"><![CDATA[<h3 id="1-平移——translate-x-y"><a href="#1-平移——translate-x-y" class="headerlink" title="1. 平移——translate(x,y)"></a>1. 平移——translate(x,y)</h3><p>即将2D渲染上下文的<strong>原点从一个位置移动到另一个位置</strong>，实际上移动的是坐标原点，而不是所绘制的对象。<code>translate(x,y)</code>中的<code>x,y</code>表示各自<strong>平移的距离像素值</strong>。（下例在<code>(0,0)</code>位置绘制了平移前后的正方形）</p>
<script async src="//jsfiddle.net/bluebells/c7ny7q98/embed/js,html,result/"></script>

<h3 id="2-缩放——scale-x-y"><a href="#2-缩放——scale-x-y" class="headerlink" title="2. 缩放——scale(x,y)"></a>2. 缩放——scale(x,y)</h3><p>即调整2D渲染上下文的尺寸。<code>scale(x,y)</code>中的<code>x,y</code>表示<strong>缩放倍数</strong>。放大2倍实际上意味着现在你绘制的每个<code>1px</code>都变成<code>2px</code>。（如果你只想现在缩放一个图形，而以后不缩放，那就要结合<code>save</code>方法和<code>restore</code>方法。下例是在保持原点情况下进行平移缩放，然后又恢复初始状态）</p>
<script async src="//jsfiddle.net/bluebells/o6hbv6d7/embed/js,html,result/"></script>

<h3 id="3-旋转——rotate-radians"><a href="#3-旋转——rotate-radians" class="headerlink" title="3. 旋转——rotate(radians)"></a>3. 旋转——rotate(radians)</h3><p>即旋转2D渲染上下文的角度。参数<code>radians</code>即以<strong>弧度</strong>为单位的旋转角度值。<br><strong>注意</strong> 执行变形的顺序很重要。（下例依次展示了先旋转后平移 和 先平移后旋转的位置变化）</p>
<script async src="//jsfiddle.net/bluebells/cvs848ws/embed/js,html,result/"></script>

<h3 id="4-变换矩阵"><a href="#4-变换矩阵" class="headerlink" title="4. 变换矩阵"></a>4. 变换矩阵</h3><p>前面所介绍的平移、缩放和旋转方法都会影响一个东西，那就是变换矩阵。变换矩阵就是一组数字，它们各自描述一个特定变形类型。在画布中，我们使用的是一个3x3矩阵。<br>$$<br>        \begin{bmatrix}<br>        \ a &amp; c &amp; e \\<br>        \ b &amp;  d &amp; f \\<br>        \ 0 &amp;  0 &amp; 1 \\<br>        \end{bmatrix} =<br>        \begin{bmatrix}<br>        \ x轴缩放 &amp; x轴倾斜 &amp; x轴平移 \\<br>        \ y轴倾斜 &amp;  y轴缩放 &amp; y轴平移 \\<br>        \ 0 &amp;  0 &amp; 1 \\<br>        \end{bmatrix}<br>$$<br><strong>变换矩阵的默认值</strong>，一个新的2D渲染上下文将包含一个全新的变换矩阵，<strong>即单位矩阵</strong>。单位矩阵表示完全未执行过变形。<br>$$<br>        \begin{bmatrix}<br>        \ 1 &amp; 0 &amp; 0 \\<br>        \ 0 &amp;  1 &amp; 0 \\<br>        \ 0 &amp;  0 &amp; 1 \\<br>        \end{bmatrix}<br>$$</p>
<h4 id="操作变换矩阵——transform和setTransform"><a href="#操作变换矩阵——transform和setTransform" class="headerlink" title="操作变换矩阵——transform和setTransform"></a>操作变换矩阵——transform和setTransform</h4><p><code>transform(xScale, ySkew, xSkew, yScale, xTrans, yTrans)</code>对应上面矩阵：<code>transform(a, b, c, d, e, f)</code>。<br><strong>setTransform</strong>方法是直接设置变换矩阵的值。而<strong>transform</strong>方法实际上是将现有的变换矩阵乘以你所指定的值。如果你多次调用<code>transform</code>,那么每一次变形都是应用到前一个变形所得到的变换矩阵，即会有一个累积效应。（例子中是将先执行平移放大，然后将矩阵重置为单位矩阵，再通过设置参数来调用<code>transform</code>方法实现了旋转效果）</p>
<h2 id=""><a href="#" class="headerlink" title=""></a><script async src="//jsfiddle.net/bluebells/jojtey1e/embed/js,html,result/"></script></h2><p>参考资料：<a href="http://www.apress.com/cn/book/9781430232919" target="_blank" rel="external">《Foundation HTML5 Canvas For Games and Entertainment》Chapter 4 Authors: Hawkes, Rob</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Canvas——保存和恢复绘图状态]]></title>
      <url>http://bluebells.tk/2017/02/03/canvas-save-restore-drawing-status/</url>
      <content type="html"><![CDATA[<h4 id="画布绘图状态"><a href="#画布绘图状态" class="headerlink" title="画布绘图状态"></a>画布绘图状态</h4><p>描述某一时刻2D渲染上下文外观的整套属性，从简单的颜色值到复杂的变换矩阵及其他特性。</p>
<h4 id="描述画布绘图状态的全部属性"><a href="#描述画布绘图状态的全部属性" class="headerlink" title="描述画布绘图状态的全部属性"></a>描述画布绘图状态的全部属性</h4><p>变换矩阵、裁剪区域、globalAlpha、globalCompositeOperation、strokeStyle、fillStyle、lineWidth、lineCap、lineJoin、miterLimit、shadowOffsetX、shadowOffsetY、shadowBlur、shadowColor、font、textAlign 和 textBaseline.</p>
<h4 id="保存绘图状态——save"><a href="#保存绘图状态——save" class="headerlink" title="保存绘图状态——save()"></a>保存绘图状态——save()</h4><p>当你保存绘图状态时，2D渲染上下文会保存一个<strong>绘图状态栈</strong>，它是一组之前保存的状态，其中最近保存的状态位于顶部——就像一张纸。<strong>绘图状态的默认栈是空的</strong>，调用save方法，就会有一个新状态被添加到这个栈。多次调用save方法，就可以将多个绘图状态逐一保存到栈中，其中最早的状态在底部。（下面的例子调用了<code>save()</code>方法保存了<code>fillStyle = &quot;red&quot;</code>状态。）</p>
<h4 id="恢复绘图状态——restore"><a href="#恢复绘图状态——restore" class="headerlink" title="恢复绘图状态——restore()"></a>恢复绘图状态——restore()</h4><p>通过调用restore方法，你能够自动取出最后添加到栈中的绘图状态，并将它应用于2D渲染上下文，用所保存的状态覆盖全部现有的样式。（下面的例子在设置了<code>fillStyle = &quot;blue&quot;</code>之后又调用了<code>restore()</code>方法恢复了之前已有的<code>fillStyle = &quot;red&quot;</code>状态。）</p>
<script async src="//jsfiddle.net/bluebells/9woptbyk/embed/js,html,result/"></script>

<h4 id="保存和恢复多个绘图状态"><a href="#保存和恢复多个绘图状态" class="headerlink" title="保存和恢复多个绘图状态"></a>保存和恢复多个绘图状态</h4><p>理解新增的项（状态）被添加到栈的顶部，并且它们是从栈顶部取回的。即后进先出的机制，最近保存到栈的绘图状态将是后来第一个恢复的状态。（修改前面的例子，在<code>fillStyle = &quot;blue&quot;</code>之后保存绘图状态，然后调用两次<code>restore()</code>方法，依次恢复了<code>blue</code>和<code>red</code>状态。）</p>
<h2 id=""><a href="#" class="headerlink" title=""></a><script async src="//jsfiddle.net/bluebells/1e524jds/embed/js,html,result/"></script></h2><p>参考资料：<a href="http://www.apress.com/cn/book/9781430232919" target="_blank" rel="external">《Foundation HTML5 Canvas For Games and Entertainment》Chapter 4 Authors: Hawkes, Rob</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Hexo博客添加站内搜索–Swiftype]]></title>
      <url>http://bluebells.tk/2017/01/31/swiftype-search-engine-for-hexo/</url>
      <content type="html"><![CDATA[<blockquote>
<p>Swiftype可以为网站及移动app提供内置搜索引掣服务。其部署十分简单，只须输入URL地址平台即可执行对用户网站的抓取，插入JS代码嵌入网站就即完成搜索引擎的创建。Swiftype还提供了分析服务，供网站检索分析用户的搜索行为和使用偏好。Swiftype还支持对搜索结果排序进行定制。</p>
</blockquote>
<p>我的博客采用<code>Hexo</code>搭建，主题是基于<code>maupassant</code>。它能提供四种搜索，分别是：</p>
<ul>
<li>google_search</li>
<li>baidu_search</li>
<li>swiftype</li>
<li>tinysou</li>
</ul>
<p>由于是刚建站，所以只试了<strong>百度</strong>，发现结果页都是在百度，于是尝试采用<strong>Swiftype</strong>的站内搜索功能，下面是实现步骤：</p>
<hr>
<h3 id="注册"><a href="#注册" class="headerlink" title="注册"></a>注册</h3><p>到<a href="https://swiftype.com" target="_blank" rel="external">swiftype</a>上注册账号，我用自己的邮箱失败了，提示要用工作邮箱，于是我用了自己在学校注册的邮箱，发现可以了，接着输入自己网站的<a href="http://bluebells.tk/">bluebells.tk</a>，根据指引建立自己站点对应的Engine；</p>
<h3 id="复制key"><a href="#复制key" class="headerlink" title="复制key"></a>复制key</h3><p>点击左侧的『install search』选项卡，在给出的一段js代码中复制<code>“install”</code>后面的<strong>key</strong>，将其添加到主题目录下的<code>_config.yml</code>文件；</p>
<figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attr">swiftype:</span> <span class="comment">## Your swiftype_key, e.g. m7b11ZrsT8Me7gzApciT</span></div></pre></td></tr></table></figure>
<h3 id="添加搜索框"><a href="#添加搜索框" class="headerlink" title="添加搜索框"></a>添加搜索框</h3><p>接着点击<strong>Add a Search Field</strong>（即添加一个搜索框）。由于主题<code>layout</code>下已包含了搜索框组件<code>_widget\search.jade</code>，且已有<strong>Swiftype</strong>代码：</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span> theme<span class="selector-class">.swiftype</span></div><div class="line">  <span class="selector-class">.widget</span></div><div class="line">	<span class="selector-tag">input</span>.st-default-search-input(placeholder=<span class="string">'Search'</span> type=<span class="string">'text'</span>)</div></pre></td></tr></table></figure>
<p><img src="http://okmotl0nl.bkt.clouddn.com/image/jpg/swiftype-search-field.jpg" alt=""><br>也就是图上的：</p>
<figure class="highlight scala"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;input <span class="class"><span class="keyword">type</span></span>=<span class="string">"text"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"st-default-search-input"</span>&gt;</div></pre></td></tr></table></figure>
<p>所以这一步我就跳过了。<br>若主题文件下没有搜索框，则可以在自己相应的组件文件夹中新建一个搜索框组件。</p>
<h3 id="配置搜索结果页"><a href="#配置搜索结果页" class="headerlink" title="配置搜索结果页"></a>配置搜索结果页</h3><p>然后点击<strong>Results Container</strong>（即配置搜索结果页）。默认是采用图中第一个弹出式容器，我希望是在根目录下的<code>/search/</code>页面上显示，所以勾选了<strong>“show on a dedicated search results page”</strong>，并将<code>/search/</code>填入<code>path</code>中。<br><img src="http://okmotl0nl.bkt.clouddn.com/image/jpg/swiftype-search-results-container.jpg" alt=""></p>
<h3 id="新建search页"><a href="#新建search页" class="headerlink" title="新建search页"></a>新建search页</h3><p>在<code>hexo</code>的<code>source</code>目录下建立一个<code>search</code>文件夹，并在其中新建一个<code>index.md</code>文件，其内容为：</p>
<figure class="highlight applescript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">layout: search</div><div class="line">title: search</div><div class="line"><span class="comment">---</span></div><div class="line">&lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"st-search-container"</span>&gt;&lt;/<span class="keyword">div</span>&gt;</div></pre></td></tr></table></figure>
<h3 id="其它"><a href="#其它" class="headerlink" title="其它"></a>其它</h3><p>至此，配置基本完成，<code>hexo d -g</code>重新部署一下即可出现站内搜索功能。搜索框的样式可根据个人爱好在CSS文件中修改。<br>管理搜索内容可在『Content』选项卡中查看，对搜索结果自定义排序及显示在『Results Rankings』选项卡中设置。</p>
<hr>
<h4 id="参考链接：Hexo静态博客添加站内搜索–Swiftype"><a href="#参考链接：Hexo静态博客添加站内搜索–Swiftype" class="headerlink" title="参考链接：Hexo静态博客添加站内搜索–Swiftype"></a>参考链接：<a href="http://www.jianshu.com/p/2010ad07d960" target="_blank" rel="external">Hexo静态博客添加站内搜索–Swiftype</a></h4>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[《麦田里的守望者》摘抄]]></title>
      <url>http://bluebells.tk/2016/12/01/%E3%80%8A%E9%BA%A6%E7%94%B0%E9%87%8C%E7%9A%84%E5%AE%88%E6%9C%9B%E8%80%85%E3%80%8B%E6%91%98%E6%8A%84/</url>
      <content type="html"><![CDATA[<p><img src="http://okmotl0nl.bkt.clouddn.com/image/jpg/JD-SALINGER-quote.jpg" alt=""><br><a id="more"></a></p>
<p style="text-align: center;">2</p>

<p style="text-align: left;">　　有些人老得快死了，就像老斯宾塞那样，可是买了条毯子就会高兴得要命。</p>

<p style="text-align: left;">　　“哦，我对自己的前途是关心的，没错儿，当然啦。我当然会关心。”我约莫考虑了一分钟。“不过并不太关心，我揣摩……”<br>　　“你会的，”老斯宾塞说。“你会关心的，孩子。到了后悔莫及的时候，你会关心的。”</p>

<!--more-->
<p style="text-align: center;">5</p>

<p style="text-align: left;">　　我写完的时候，约莫是十点三十分，我揣摩。我一点不觉得困，所以走到窗口往外眺望了一会儿，雪已经住了，可是每隔一会儿，你就可以听见一辆抛锚的汽车发动引擎的声音。你还可以听见老阿克莱打呼噜的声音。</p>

<p style="text-align: center;">7</p>

<p style="text-align: left;">　　我等着的时候，就捧起一掬雪洗了下我的脸。我脸上还有不少血呢。</p>

<p style="text-align: center;">13</p>

<p style="text-align: left;">　　“好吧，”我说。这违背我的原则，可我心里烦闷得要命，甚至都没加思索。糟就糟在这里。你要是心里太烦闷，甚至都没法思索。</p>

<p style="text-align: left;">　　说来好笑，我挂的时候，心里竟有点难过。我想起她怎样到铺子里去买衣服，铺子里的人谁也不知道她是妓女。售货员卖给她衣服的时候，大概还以为她是个普通的姑娘哩。这使我心里难过得要命——我也说不出到底是什么道理。</p>

<p style="text-align: center;">14</p>

<p style="text-align: left;">　　我很想从窗口跳出去。我可能也真会那样做，要是我确实知道我一摔地上马上就会有人拿布把我盖起来。我不希望自己浑身是血的时候有一嘟噜傻瓜蛋伸长脖子看着我。</p>

<p style="text-align: center;">16</p>

<p style="text-align: left;">　　汽车来去飞驰，刹车声响成一片，他的父母却一点儿也不注意他，他呢，只顾靠着阶沿石走，嘴里唱着“你要是在麦田里捉到了我。”这使我心情舒畅了不少。我心里不像先前那么沮丧了。</p>

<p style="text-align: center;">20</p>

<p style="text-align: left;">　　我最后从散热器上下来，向衣帽间走去，我那时都哭出来了。我不知道为什么哭，可我的确哭出来了。我揣摩那是因为我觉得它们的那么沮丧，那么寂寞。</p>

<p style="text-align: left;">　　主要是，我不高兴看见他躺在那个混账公墓里。四周围全是死人和墓碑什么的。有太阳的日子倒还马马虎虎，可是有两次——确确实实两次——我们在墓地的时候忽然下起雨来。那真是可怕。雨点打在他的混账墓碑上，雨点打在他肚皮上的荒草上。到处都是雨。所有到公墓里来凭吊的人都急急奔向他们的汽车。就是这一点，差点儿让我发疯。所有那些来凭吊的人都能躲进自己的汽车，听收音机，然后到什么安乐窝里去吃晚饭——人人都这样做，除了艾里。我实在受不了这个。我知道在墓地里的只是他的尸体，他的灵魂已经进了天堂，等等，可我照样受不了。我真希望他不躺在公墓里。……有太阳的日子倒还马马虎虎，可太阳只是在它想出来的时候才出来。</p>

<p style="text-align: center;">22</p>

<p style="text-align: left;">　　“不管怎样，我喜欢现在这样，”我说。“我是说就想现在这样。跟你坐在一块儿，聊聊天，逗着——”<br> 　　“这不是什么真正的东西！”<br> 　　“这是真正的东西！当然是的，他妈的为什么不是？人们就是不把真正的东西当东西看待。我他妈的对这都腻烦透了。”</p>

<p style="text-align: left;">　　不管怎样，我老是在想象，有这么一群小孩子在一大块麦田里做游戏。几千几万个小孩子，附近没有一个人——没有一个大人，我是说——除了我。我呢，就站在那混账的悬崖边。我的职务是在那儿守望，要是有哪个孩子往悬崖边奔来，我就把他捉住——我是说孩子们都在狂奔，也不知道自己是在往哪儿跑，我得从什么地方出来，把他们捉住。我整天就干这样的事。我只想当个麦田里的守望者。我知道这有点异想天开，可我真正喜欢干的就是这个。</p>

<p style="text-align: center;">24</p>

<p style="text-align: left;">　　“他说的是：‘一个不成熟的男子的标志是他愿意为某种事业英勇地死去，一个成熟男子的标志是他愿意为某种事业卑贱地活着。’”</p>

<p style="text-align: center;">25</p>

<p style="text-align: left;">　　所有做父母的、做母亲的和其他人等，全都奔过去躲到转台的屋檐下，免得被雨淋湿，可我依旧在长椅上坐了好一会儿。我身上都湿透了，尤其是我的脖子上和裤子上。我那顶猎人帽在某些部分的确给我档住了不少雨，可我依旧淋得像只落汤鸡。不过我并不在乎。突然间我变得他妈的快乐，眼看着老菲芘那么一圈圈转个不停。我险些儿他妈的大叫大嚷起来，我心里实在快乐极了，我老实告诉你说。我不知道什么缘故，她穿着那么件蓝大衣，老转个不停，看去真他妈的好看极了。 </p>

<p style="text-align: center;">26</p>

<p style="text-align: left;">　　老实说，我真不知道自己有什么想法。我很抱歉我竟跟这许多人谈起这事。我只知道我很想念我所谈到的每一个人。</p>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[你好！]]></title>
      <url>http://bluebells.tk/2016/05/06/%E4%BD%A0%E5%A5%BD%EF%BC%81/</url>
      <content type="html"><![CDATA[<p style="text-align:center; "><strong>生活</strong>不止眼前的苟且 还有<strong>诗和远方</strong>的田野。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[在网页中添加公式]]></title>
      <url>http://bluebells.tk/2016/05/06/%E5%9C%A8%E7%BD%91%E9%A1%B5%E4%B8%AD%E6%B7%BB%E5%8A%A0%E5%85%AC%E5%BC%8F/</url>
      <content type="html"><![CDATA[<h3 id="TeX和LaTeX"><a href="#TeX和LaTeX" class="headerlink" title="TeX和LaTeX"></a>TeX和LaTeX</h3><p>使用 TeX 和 LaTeX 格式的公式使用 公式分隔符 环绕公式，即告知MathJax页面哪个部分代码公式和它的基本格式。 这里有两种形式的公式：</p>
<ol>
<li>包含在段落之中的</li>
<li>独立于其他文字的</li>
</ol>
<p>默认的公式分隔符是 <code>$$...$$</code> 和 <code>\[...\]</code> ，还有 <code>\(...\)</code> 常用于段落中的公式。请特别注意， <code>\(...\)</code> 分隔符 不是 默认使用的。美元符号$常常在其他情况下使用，这会导致本文被错误的当做公式解析了。</p>
<p>例如，使用美元分隔符的情况下， ”… the cost is $2.50 for the first one, and $2.00 for each additional one …” 会被处理为 “2.50 for the first one, and” 。因为介于美元符号之间的文字内容被当做公式处理了。基于这样的理由，如果你想使用美元分隔符，请在配置文件中显示声明:</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">&lt;script type=<span class="string">"text/x-mathjax-config"</span>&gt;</div><div class="line">MathJax.Hub.Config(&#123;</div><div class="line">  <span class="attr">tex2jax</span>: &#123;<span class="attr">inlineMath</span>: [[<span class="string">'$'</span>,<span class="string">'$'</span>], [<span class="string">'\\('</span>,<span class="string">'\\)'</span>]]&#125;</div><div class="line">&#125;);</div><div class="line">&lt;/script&gt;</div><div class="line">&lt;script type=<span class="string">"text/javascript"</span> src=<span class="string">"path-to-mathjax/MathJax.js?config=TeX-AMS-MML_HTMLorMML"</span>&gt;&lt;/script&gt;</div></pre></td></tr></table></figure>
<p>参考 <a href="http://mathjax-chinese-doc.readthedocs.io/en/latest/options/tex2jax.html#configure-tex2jax" target="_blank" rel="external">tex2jax配置 options</a> 页面来为 tex2jax 处理器指定更多的参数。 参考 <a href="http://mathjax-chinese-doc.readthedocs.io/en/latest/tex.html#tex-support" target="_blank" rel="external">TeX和LaTeX</a> 页面了解更多MathJax对Tex格式的支持和美元符号的使用问题。</p>
<p>这是一个完整的使用TeX公式的页面例子(<a href="http://cdn.mathjax.org/mathjax/2.0-latest/test/sample-tex.html" target="_blank" rel="external">在线查看</a>):</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="comment">&lt;!--这是一个完整的使用TeX公式的页面例子--&gt;</span></div><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>MathJax TeX Test Page<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/x-mathjax-config"</span>&gt;</span><span class="javascript"></span></div><div class="line">  MathJax.Hub.Config(&#123;<span class="attr">tex2jax</span>: &#123;<span class="attr">inlineMath</span>: [[<span class="string">'$'</span>,<span class="string">'$'</span>], [<span class="string">'\\('</span>,<span class="string">'\\)'</span>]]&#125;&#125;);</div><div class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span></span></div><div class="line">  <span class="attr">src</span>=<span class="string">"http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML"</span>&gt;<span class="undefined"></span></div><div class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">When $a \ne 0$, there are two solutions to \(ax^2 + bx + c = 0\) and they are</div><div class="line">$$x = &#123;-b \pm \sqrt&#123;b^2-4ac&#125; \over 2a&#125;.$$</div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<p>When $a \ne 0$, there are two solutions to $ax^2 + bx + c = 0$ and they are<br>$$x = {-b \pm \sqrt{b^2-4ac} \over 2a}.$$<br>转载自：<a href="http://mathjax-chinese-doc.readthedocs.io/en/latest/start.html" target="_blank" rel="external">MathJax Chinese Doc 2.0 documentation</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Hello World]]></title>
      <url>http://bluebells.tk/2016/05/06/hello-world/</url>
      <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    </entry>
    
  
  
</search>
